#!/bin/bash

ifclass OS-64 || exit 0

error=0; trap 'error=$(($?>$error?$?:$error))' ERR # save maximum error code

mkdir -p $target/var/www/repos/apt/debian/conf

$ROOTCMD gpg --list-keys

distro=$($ROOTCMD cat /etc/os-release | grep VERSION_CODENAME | sed "s/VERSION_CODENAME=*//g")

$ROOTCMD cat > /root/.gnupg/gpg-agent.conf <<-EOF
default-cache-ttl 0
pinentry-program /usr/bin/pinentry
EOF

$ROOTCMD gpg-connect-agent reloadagent /bye

passphrase=$($ROOTCMD openssl rand -base64 32)

cat > $target/registry <<-EOF
     %echo Generating a basic OpenPGP key
     Key-Type: RSA
     Key-Length: 4096
     Subkey-Type: RSA
     Subkey-Length: 4096
     Name-Real: Registry
     Expire-Date: 0
     Passphrase: ${passphrase}
     %commit
     %echo done
EOF

fcopy -iM /etc/apache2/sites-available/debian.conf

ainsl -a /etc/apache2/apache2.conf "ServerName 127.0.0.1"

$ROOTCMD /usr/sbin/a2dissite 000-default.conf
$ROOTCMD /usr/sbin/a2ensite debian.conf
$ROOTCMD /usr/sbin/apache2ctl configtest
$ROOTCMD rm -rf /etc/apache2/sites-available/000-default.conf /var/www/html

$ROOTCMD gpg --batch --generate-key registry && rm $target/registry

pub_key=$($ROOTCMD gpg --keyid-format=short --list-keys registry | grep pub | head -1 | grep -o -P '(?<=/)[A-Z0-9]{8}')

echo "pub key ${pub_key}"
echo "passphrase ${passphrase}"

echo "A"

echo <<EOF
set timeout 20
spawn gpg --command-fd=0 --pinentry-mode=loopback --edit-key ${pub_key}
expect {
    timeout                                             {send_user "\n!!! timeout !!!\n"; exit 127}
    "Secret key is available.*"                         {send -- "addkey\r"; exp_continue}
    "Please select what kind of key you want*"          {send -- "4\r"; exp_continue}
    "What keysize do you want?*"                        {send -- "4096\r"; exp_continue}
    "Please specify how long the key should be valid*"  {send -- "0\r"; exp_continue}
    "Is this correct?*"                                 {send -- "y\r"; exp_continue}
    "Really create?*"                                   {send -- "y\r"; exp_continue}
    "We need to generate a lot of random bytes*"        {send -- "stubbtusstub\r"; exp_continue}
    "Please enter the passphrase*"                      {send -- "${passphrase}\r"; exp_continue}
}
set returnvalues [wait]
set exitcode [lindex \$returnvalues 3]
exit \$exitcode
EOF

$ROOTCMD /usr/bin/expect <<EOF
set timeout 20
spawn gpg --command-fd=0 --pinentry-mode=loopback --edit-key ${pub_key}
expect {
    timeout                                             {send_user "\n!!! timeout !!!\n"; exit 127}
    "Secret key is available.*"                         {send -- "addkey\r"; exp_continue}
    "Please select what kind of key you want*"          {send -- "4\r"; exp_continue}
    "What keysize do you want?*"                        {send -- "4096\r"; exp_continue}
    "Please specify how long the key should be valid*"  {send -- "0\r"; exp_continue}
    "Is this correct?*"                                 {send -- "y\r"; exp_continue}
    "Really create?*"                                   {send -- "y\r"; exp_continue}
    "We need to generate a lot of random bytes*"        {send -- "stubbtusstub\r"; exp_continue}
    "Please enter the passphrase*"                      {send -- "${passphrase}\r"; exp_continue}
}
set returnvalues [wait]
set exitcode [lindex \$returnvalues 3]
exit \$exitcode
EOF




#cat $target/auto-sub-key

#chmod +x $target/auto-sub-key

#echo "B"

#$ROOTCMD ls -la


#echo "C"

#$ROOTCMD ./auto-sub-key

#rm -f $target/auto-sub-key

echo "C"

#$ROOTCMD gpg --command-fd=0 --status-fd=1 --pinentry-mode=loopback --edit-key ${pub_key} <<EOF
#addkey
#4
#4096
#0
#${passphrase}
#EOF

sub_key=$($ROOTCMD gpg --with-colons --keyid-format=short --list-keys registry | grep sub | grep ':s:' | head -1 | cut -d':' -f5)

cat > $target/var/www/repos/apt/debian/conf/override.${distro} <<EOF
${distro} Priority optional
${distro} Section net
EOF

cat > $target/var/www/repos/apt/debian/conf/distributions <<EOF
Origin: OS-64
Codename: ${distro}
Architectures: amd64 arm64
Components: main
Description: OS-64 REGISTRY
SignWith: ${sub_key}
DebOverride: override.${distro}
EOF

cat > $target/var/www/repos/apt/debian/conf/options <<EOF
verbose
ask-passphrase
EOF

$ROOTCMD gpg --armor --output /var/www/repos/apt/debian/gpg --export $sub_key

fcopy -iM /usr/sbin/reprepro-auto

ainsl -a /root/.bashrc "export SIGNING_PASSWORD=${passphrase}"

export SIGNING_PASSWORD=${passphrase}

$ROOTCMD chmod +x /usr/sbin/reprepro-auto

$ROOTCMD /usr/sbin/reprepro-auto export


exit $error
